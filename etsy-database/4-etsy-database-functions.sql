-- FUNCTIONS:
-- 1. Function for calculating the average rating of a given product:
CREATE FUNCTION PRODUCT_AVERAGE_RATING(@PRODUCT_ID INT) RETURNS VARCHAR(200)
AS
BEGIN
    DECLARE @PRODUCT_NAME VARCHAR(50), @AVG_RATING NUMERIC(3,2)
    SELECT @PRODUCT_NAME = PRODUCT_NAME, @AVG_RATING = AVG(RATING)
    FROM REVIEWS R JOIN PRODUCTS P
    ON R.PRODUCT_ID = P.PRODUCT_ID
    WHERE P.PRODUCT_ID = @PRODUCT_ID
    GROUP BY P.PRODUCT_ID, PRODUCT_NAME

    RETURN @PRODUCT_NAME + ' (ID = ' + CAST(@PRODUCT_ID AS VARCHAR) + '), Average Rating: ' + CAST(@AVG_RATING AS VARCHAR) + '.'
END;

SELECT DBO.PRODUCT_AVERAGE_RATING(PRODUCT_ID) AS PRODUCT_RATING_RESULT
FROM PRODUCTS;


-- 2. Function for calculating the total income of a given seller:
CREATE FUNCTION SELLER_TOTAL_INCOME(@SELLER_ID INT) RETURNS VARCHAR(200)
AS
BEGIN
	DECLARE @SELLER_NAME VARCHAR(50), @TOTAL_INCOME NUMERIC(10,2)
	SELECT @SELLER_NAME = USERNAME, @TOTAL_INCOME = SUM(O.TOTAL_PRICE)
	FROM USERS U JOIN PRODUCTS P ON U.USER_ID = P.SELLER_ID
				JOIN ORDER_PRODUCTS OP ON P.PRODUCT_ID = OP.PRODUCT_ID
				JOIN ORDERS O ON OP.ORDER_ID = O.ORDER_ID
	WHERE U.USER_ID = @SELLER_ID
	GROUP BY U.USER_ID, USERNAME

	RETURN @SELLER_NAME + ' (ID = ' + CAST(@SELLER_ID AS VARCHAR) + '), Total income: ' + CAST(@TOTAL_INCOME AS VARCHAR) + '.'
END;

SELECT DBO.SELLER_TOTAL_INCOME(USER_ID) AS SELLER_INCOME_RESULT
FROM USERS WHERE ROLE = 'seller';


-- 3. Function for calculating the number of active products in a given category:
CREATE FUNCTION CATEGORY_ACTIVE_PRODUCTS(@CATEGORY_ID INT) RETURNS VARCHAR(200)
AS
BEGIN
    DECLARE @CATEGORY_NAME VARCHAR(50), @PRODUCT_COUNT INT
    SELECT @CATEGORY_NAME = CATEGORY_NAME, @PRODUCT_COUNT = COUNT(P.PRODUCT_ID)
    FROM CATEGORIES C JOIN PRODUCTS P
    ON C.CATEGORY_ID = P.CATEGORY_ID
    WHERE C.CATEGORY_ID = @CATEGORY_ID
    GROUP BY C.CATEGORY_ID, CATEGORY_NAME

    RETURN @CATEGORY_NAME + ' (ID = ' + CAST(@CATEGORY_ID AS VARCHAR) + '), Active Products: ' + CAST(@PRODUCT_COUNT AS VARCHAR) + '.'
END;

SELECT DBO.CATEGORY_ACTIVE_PRODUCTS(CATEGORY_ID) AS CATEGORY_PRODUCT_COUNT
FROM CATEGORIES;