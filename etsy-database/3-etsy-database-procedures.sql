-- PROCEDURES:
-- 1. Procedure to calculate the number and total value of orders for a user:
CREATE PROCEDURE GET_USER_SUM_ORDER
    @USER_ID INT, 
    @ORDER_COUNT INT OUTPUT, 
    @ORDER_PRICE_SUM NUMERIC(10, 2) OUTPUT
AS
BEGIN
    SELECT @ORDER_COUNT = COUNT(ORDER_ID)
    FROM ORDERS
    WHERE USER_ID = @USER_ID;

    SELECT @ORDER_PRICE_SUM = SUM(TOTAL_PRICE)
    FROM ORDERS
    WHERE USER_ID = @USER_ID;
END;

DECLARE @ORDER_COUNT INT, @ORDER_PRICE_SUM NUMERIC(10,2)
EXEC GET_USER_SUM_ORDER 1, @ORDER_COUNT OUTPUT, @ORDER_PRICE_SUM OUTPUT
PRINT 'Number of Orders: ' + CAST(@ORDER_COUNT AS VARCHAR)
PRINT 'Sum Order Price: ' + CAST(@ORDER_PRICE_SUM AS VARCHAR)


-- 2. Procedure to calculate the number and average rating of reviews for a product:
CREATE PROCEDURE GET_PRODUCT_REVIEW_STATS
	@PRODUCT_ID INT,
	@REVIEW_COUNT INT OUTPUT,
	@AVERAGE_RATING NUMERIC(3,2) OUTPUT
AS
BEGIN
	SELECT @REVIEW_COUNT = COUNT(REVIEW_ID)
	FROM REVIEWS
	WHERE PRODUCT_ID = @PRODUCT_ID;

	SELECT @AVERAGE_RATING = AVG(RATING)
	FROM REVIEWS
	WHERE PRODUCT_ID = @PRODUCT_ID;
END;

DECLARE @REVIEW_COUNT INT, @AVERAGE_RATING NUMERIC(3,2)
EXEC GET_PRODUCT_REVIEW_STATS 1, @REVIEW_COUNT OUTPUT, @AVERAGE_RATING OUTPUT
PRINT 'Number of reviews: ' + CAST(@REVIEW_COUNT AS VARCHAR)
PRINT 'Average rating: '+ CAST(@AVERAGE_RATING AS VARCHAR)


-- 3. Procedure to calculate the number of products in an active shopping cart:
CREATE PROCEDURE GET_CART_PRODUCT_COUNT
	@USER_ID INT,
	@PRODUCT_COUNT INT OUTPUT
AS
BEGIN
	SELECT @PRODUCT_COUNT = COUNT(PRODUCT_ID)
	FROM CART_ITEMS CI JOIN SHOPPING_CART SC ON CI.CART_ID = SC.CART_ID
	WHERE SC.USER_ID = @USER_ID AND SC.STATUS = 'active';
END;

DECLARE @PRODUCT_COUNT INT
EXEC GET_CART_PRODUCT_COUNT 1, @PRODUCT_COUNT OUTPUT
PRINT 'Number of Products in Cart: ' + CAST(@PRODUCT_COUNT AS VARCHAR)